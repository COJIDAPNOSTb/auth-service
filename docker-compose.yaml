services:
  redis:
    image: redis:8.0.1
    restart: "no"
    ports:
      - "6380:6379"
    healthcheck:
      test: redis-cli ping
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5


  auth-service:
    image: auth-service:latest
    build: .
    restart: "no"
    environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/authdb
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: 123qwe
        SPRING_DATA_REDIS_HOST: redis
        SPRING_DATA_REDIS_PORT: 6379
        SPRING_SECURITY_CSRF_ENABLED: false
    ports:
      - "8081:8080"
    depends_on:
      - postgres


  postgres:
    image: postgres:17.5
    restart: "no"
    ports:
      - "5435:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: 123qwe
      POSTGRES_DB: authdb
    healthcheck:
      test: pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  prometheus:
    image: prom/prometheus:v3.4.0
    restart: "no"
    command:
      - "--web.enable-lifecycle"
      - "--config.file=/etc/prometheus/prometheus.yml"
    ports:
      - "9091:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Вот эта строка монтирует ваш файл
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/-/healthy
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5

  grafana:
    image: grafana/grafana:12.0.0
    restart: "no"
    ports:
      - "3001:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "ADMIN"
    healthcheck:
      test: curl --fail -s http://localhost:3000/api/health || exit 1
      interval: 10s
      timeout: 5s
      start_period: 10s
      retries: 5



volumes:
  postgres_data:
